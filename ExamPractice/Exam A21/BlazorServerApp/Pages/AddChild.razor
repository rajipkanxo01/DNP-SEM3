@page "/AddChild"
@using BlazorServerApp.Data
@using Domains
@inject IChildService ChildService;
<h3>AddChild</h3>

<div class="form-group field">
    <label>Name:</label>
    <input type="text" @bind="name" @bind:event="oninput"/>
</div>

<div class="form-group field">
    <label>Gender:</label>
    <input type="text" @bind="gender" @bind:event="oninput"/>
</div>

<div class="form-group field">
    <label>Age:</label>
    <input type="number" @bind="age" @bind:event="oninput"/>
</div>

@if (!string.IsNullOrEmpty(resultMsg))
{
    <label style="color: @color">@resultMsg</label>
}

<div class="button-row">
    <button @onclick="Create" class="btn-outline-primary">Create</button>
</div>

@code {
    private string name = "";
    private string gender = "";
    private int age;

    private string resultMsg = "";
    private string color = "";

    private async Task Create()
    {
        try
        {
            if (string.IsNullOrEmpty(name)) throw new Exception("Name cannot be empty");
            if (string.IsNullOrEmpty(gender)) throw new Exception("Gender cannot be empty");
            if (age is >6 or <3) throw new Exception("Age must be between 3 and 6");

            Child toCreateChild = new Child()
            {
                Name = name,
                Gender = gender,
                Age = age
            };
            await ChildService.CreateAsync(toCreateChild);
            resultMsg = "Child created!!";
            color = "green";

            name = "";
            gender = "";
            age = 0;
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            resultMsg = e.Message;
            color = "Red";
        }
    }

}